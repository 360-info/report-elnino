{
  "hash": "5f6103c3a756e327711a5e1568ec7e28",
  "result": {
    "markdown": "---\ntitle: \"El Niño\"\nauthor: \"James Goldie\"\nformat: sverto-html\n---\n\n\n:::{}\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nhere() starts at /workspaces/report-elnino\n```\n:::\n:::\n\n## Analysis: ways of measuring El Niño\n\nFor a few of these charts, we're going to compare outcomes with an\nindicator measuring ENSO phase (El Niño, neutral or La Niña). But as\nENSO is a phenomenon of both the atmosphere and the ocean, there're a\nfew ways to measure it. We're going to compare those to see if it makes\na lot of difference to our classifications.\n\nOn the ocean side, the NINO34 index---also called the Oceanic Nino Index\n(ONI)---defines sea surface temperatures in the mid-eastern Pacific. An\nanomaly in that area from the long term average of at least +0.5°C\ndefines an El Niño, while lower than -0.5°C defines a La Niña.\n\nOn the atmospheric side, the Southern Oscillation Index (SOI) compares\nthe air pressure difference between Tahiti and Darwin. An SOI below -8\nfor an extended period defines an El Niño; an SOI above +8 defines a La\nNiña.\n\nONI is NOAA's primary index for El Ni˜no measurement, but the Australian\nBureau of Meteorology typically looks at both (as well as dynamical\nfactors and seasonal forecast models) to make the call.\n\nLet's load data in for both and compare. Nino3.4 comes from the [NASA\nPhysical Sciences\nLaboratory](https://psl.noaa.gov/gcos_wgsp/Timeseries/Nino34/):\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 17 parsing failures.\nrow  col               expected    actual                                                             file\n155 year no trailing characters -99.99    '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n155 NA   13 columns             1 columns '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n156 year no trailing characters NINA34    '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n156 NA   13 columns             1 columns '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n157 year no trailing characters 5N-5S     '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n... .... ...................... ......... ................................................................\nSee problems(...) for more details.\n```\n:::\n:::\n\nAnd here's SOI over June-Sep each year:\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1769 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): year_month, soi\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\nNow we can join and compare the two:\n\n::: {.cell}\n\n:::\n\nWhen we demand that both indicators agree on a phase, we get a subset of\nthe years manually indicated as an El Niño or La Niña by the Bureau of\nMeteorology. That could be because our indicators are focusing on\nJune--September (partly because we're interested in kharif crops later\nin this analysis), where some ENSO events might develop later (or maybe\none of the ocean or atmosphere began later than the other).\n\nIf we go with at least one of the indicators in a phase (provided the\ntwo don't disagree with opposite phases), we get a list more consistent\nwith the BOM.\n\n## Analysis: Indian rainfall and ENSO\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 609 Columns: 12\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(1): ...1 dbl (11): Year, Actual Rainfall: JUN, Actual Rainfall: JUL, Actual\nRainfall:...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n:::\n\n## Analysis: monthly SOI to JJAS SOI\n\nLet's join the two and visualise by colour. Here's the Southern\nPeninsula:\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n## Analysis: crop yield and ENSO\n\nNow let's pull in crop yield data from\n[ICRISAT](http://data.icrisat.org). This data has columns for each crop\n*and* each of three measures:\n\n1.  Area (in thousands of hectares),\n2.  Productions (in thousands of tons), and\n3.  Yield (in kilograms per hectare)\n\nLet's lengthen this a bit so that we can compute on all the dimensions,\nand we'll classify the states according to the rainfall region that\nthey're in:\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nRows: 16146 Columns: 80\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): State Name, Dist Name\ndbl (78): Dist Code, Year, State Code, RICE AREA (1000 ha), RICE PRODUCTION ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n### Production by region and crop\n\nNow that this is tidy, let's start wide.\n\nBefore we start looking at breakdowns across regions and crops, let's\nfirst just find out which regions and crops produce the most (in mass\nterms!)\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'state_name'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nLooks like biggest-producing states over 2005-2014 were all Central and\nNorth West region states.\n\nHow about crops?\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\nAs expected, rice and wheat are big ones, followed by sugarcane,\noilseeds and maize.\n\nWe probably want to focus on [*kharif* crops](), which are ones grown\nduring the monsoon season that are dependent on good rain. Rice and\nmaize are both major kharif crops, but wheat is not---it's a *rabi*\ncrop, grown in the winter.\n\n### Annual yield (all regions and crops)\n\n::: callout-note\nYield in kg/ha is `(production * 10^6) / (area in * 10^3)`\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\nWe can see that yield has increased steadily over time (likely thanks to\ntechnological improvements), but you can see a bit of year-to-year\nvariation.\n\nThere's a lot of noise here, as we're looking at parts of India and\ncrops that are less dependent on rainfall.\n\n### Yield by region\n\nLet's look at this two ways: all crops for each region, and each crop\nfor all regions. We'll start looking at each region:\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\nIt's interesting to see that yield variability has increased\nsubstantially in the last 20 years, particularly in Peninsular India.\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 52 × 6\n    year .fitted    .resid elnino neutral lanina\n   <dbl>   <dbl>     <dbl>  <dbl>   <dbl>  <dbl>\n 1  1966    1.38 -0.0297    NA       1.35  NA   \n 2  1967    1.42 -0.0374    NA       1.38  NA   \n 3  1968    1.46 -0.0559    NA       1.40  NA   \n 4  1969    1.50 -0.0352    NA       1.46  NA   \n 5  1970    1.54  0.0623    NA      NA      1.60\n 6  1971    1.58  0.149     NA      NA      1.73\n 7  1972    1.62  0.0639     1.68   NA     NA   \n 8  1973    1.66  0.134     NA      NA      1.79\n 9  1974    1.70 -0.0814    NA      NA      1.62\n10  1975    1.75  0.0483    NA      NA      1.79\n11  1976    1.79 -0.226     NA       1.56  NA   \n12  1977    1.83 -0.0438    NA       1.79  NA   \n13  1978    1.88 -0.0224    NA      NA      1.85\n14  1979    1.92 -0.0331    NA       1.89  NA   \n15  1980    1.96  0.0806    NA       2.05  NA   \n16  1981    2.01  0.169     NA       2.18  NA   \n17  1982    2.06 -0.0382     2.02   NA     NA   \n18  1983    2.10 -0.106     NA       2.00  NA   \n19  1984    2.15 -0.142     NA      NA      2.01\n20  1985    2.20 -0.0190    NA      NA      2.18\n21  1986    2.25 -0.112     NA       2.13  NA   \n22  1987    2.30 -0.0291     2.27   NA     NA   \n23  1988    2.35  0.141     NA      NA      2.49\n24  1989    2.41  0.0809    NA      NA      2.49\n25  1990    2.46  0.0132    NA       2.47  NA   \n26  1991    2.50  0.000387  NA       2.50  NA   \n27  1992    2.54  0.0629    NA       2.60  NA   \n28  1993    2.57  0.0598    NA       2.63  NA   \n29  1994    2.60  0.131     NA       2.73  NA   \n30  1995    2.63 -0.123     NA       2.51  NA   \n31  1996    2.66 -0.0582    NA       2.60  NA   \n32  1997    2.69 -0.0990     2.59   NA     NA   \n33  1998    2.72  0.226     NA      NA      2.95\n34  1999    2.76  0.0883    NA      NA      2.85\n35  2000    2.79  0.208     NA      NA      3.00\n36  2001    2.82  0.0517    NA       2.87  NA   \n37  2002    2.86 -0.462      2.39   NA     NA   \n38  2003    2.89 -0.234     NA       2.66  NA   \n39  2004    2.94 -0.0409    NA       2.90  NA   \n40  2005    2.98 -0.127     NA       2.86  NA   \n41  2006    3.03 -0.00157   NA       3.03  NA   \n42  2007    3.08  0.168     NA      NA      3.25\n43  2008    3.13  0.0242    NA       3.15  NA   \n44  2009    3.18 -0.186      3.00   NA     NA   \n45  2010    3.24 -0.00607   NA      NA      3.23\n46  2011    3.30  0.0856    NA       3.38  NA   \n47  2012    3.36 -0.233     NA       3.13  NA   \n48  2013    3.42  0.185     NA       3.61  NA   \n49  2014    3.49  0.255     NA       3.75  NA   \n50  2015    3.56 -0.130      3.43   NA     NA   \n51  2016    3.63 -0.257     NA       3.38  NA   \n52  2017    3.71  0.210     NA       3.92  NA   \n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\nThe strong relationship here in Peninsular India, with a weaker\nrelationship in Central India.\n\n### Crops grown by region\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'rainfall_region'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\nRice is a major crop in all four regions---Peninsular India contributed\naround 25 million tonnes in 2022 (about 20% of the national total).\n\nMaize is another crop grown in this season, and Peninsular India is a\nmajor grower---about 13 million tonnes (about 40% of the national\ntotal).\n\nThe other big crops in\n\n### Yield by crop\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\nCrops that seem to be most affected by ENSO include Groundnut, Cotton,\nPigeonpea, Pulses and Soyabean. Others with a possible but\nmarginal-looking relationship include Maize, Millet, Mustard, Oilseed,\nSafflower and Rice.\n\n## Analysis: crop yield and rainfall\n\nThat said, using SOI directly as a predictor might not be the way to go.\nIt might be helpful to look at rainfall more directly as a predictor and\nthen see the effect of ENSO on top.\n\nThe first thing we'll need to do is match Indian states to rainfall\nregions (NE, NW, central, peninsular). Then we can join the rainfall and\ncrop yield datasets.\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'rainfall_region'. You can override\nusing the `.groups` argument.\n```\n:::\n:::\n\nIt still looks like the stronger relationship here is with certain crops\nrather than certain regions, but let's break it down by both.\n\n::: {.cell}\n\n:::\n\n## Analysis: ENSO and global and national temperatures\n\nHere, global and national temperatures are courtesy of [Berkeley\nEarth](https://berkeleyearth.org/data/). They have generously agreed to\nlicence the data here under [Creative Commons Attribution (CC BY\n4.0)](https://creativecommons.org/licenses/by/4.0/).\n\nLet's start with global temperature data:\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                               file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-ecuador.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                               file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-florida.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                              file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-global.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                                 file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-indonesia.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                                file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-malaysia.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                                   file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-new_zealand.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                             file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-texas.txt'\n```\n:::\n:::\n\nLet's join it to the Nino3.4, which we have monthly across the whole\nyear. But we might need a smoother on those first.\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `date = ymd(paste(year, month, \"01\"))`.\nCaused by warning:\n!  6 failed to parse.\n```\n:::\n:::\n\nFirst let's look at the global picture:\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_line()`).\n```\n:::\n:::\n\nAnd then some selected regions:\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 31 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 30 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 31 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 30 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_line()`).\n```\n:::\n:::\n\n\n:::\n\n\n::: {.cell}\n\n:::\n\n\n## Analysis: ways of measuring El Niño\n\nFor a few of these charts, we're going to compare outcomes with an indicator measuring ENSO phase (El Niño, neutral or La Niña). But as ENSO is a phenomenon of both the atmosphere and the ocean, there're a few ways to measure it. We're going to compare those to see if it makes a lot of difference to our classifications.\n\nOn the ocean side, the NINO34 index—also called the Oceanic Nino Index (ONI)—defines sea surface temperatures in the mid-eastern Pacific. An anomaly in that area from the long term average of at least +0.5°C defines an El Niño, while lower than -0.5°C defines a La Niña.\n\nOn the atmospheric side, the Southern Oscillation Index (SOI) compares the air pressure difference between Tahiti and Darwin. An SOI below -8 for an extended period defines an El Niño; an SOI above +8 defines a La Niña.\n\nONI is NOAA's primary index for El Ni˜no measurement, but the Australian Bureau of Meteorology typically looks at both (as well as dynamical factors and seasonal forecast models) to make the call.\n\nLet's load data in for both and compare. Nino3.4 comes from the [NASA Physical Sciences Laboratory](https://psl.noaa.gov/gcos_wgsp/Timeseries/Nino34/):\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 17 parsing failures.\nrow  col               expected    actual                                                             file\n155 year no trailing characters -99.99    '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n155 NA   13 columns             1 columns '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n156 year no trailing characters NINA34    '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n156 NA   13 columns             1 columns '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n157 year no trailing characters 5N-5S     '/workspaces/report-elnino/data/nasa-nino34-anomaly-monthly.txt'\n... .... ...................... ......... ................................................................\nSee problems(...) for more details.\n```\n:::\n:::\n\n\nAnd here's SOI over June-Sep each year:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1769 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): year_month, soi\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nNow we can join and compare the two:\n\n\n::: {.cell}\n\n:::\n\n\nWhen we demand that both indicators agree on a phase, we get a subset of the years manually indicated as an El Niño or La Niña by the Bureau of Meteorology. That could be because our indicators are focusing on June–September (partly because we're interested in kharif crops later in this analysis), where some ENSO events might develop later (or maybe one of the ocean or atmosphere began later than the other).\n\nIf we go with at least one of the indicators in a phase (provided the two don't disagree with opposite phases), we get a list more consistent with the BOM.\n\n## Analysis: Indian rainfall and ENSO\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 609 Columns: 12\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(1): ...1 dbl (11): Year, Actual Rainfall: JUN, Actual Rainfall: JUL, Actual\nRainfall:...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n:::\n\n\n## Analysis: monthly SOI to JJAS SOI\n\nLet's join the two and visualise by colour. Here's the Southern Peninsula:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n## Analysis: crop yield and ENSO\n\nNow let's pull in crop yield data from [ICRISAT](http://data.icrisat.org). This data has columns for each crop _and_ each of three measures:\n\n1. Area (in thousands of hectares),\n2. Productions (in thousands of tons), and\n3. Yield (in kilograms per hectare)\n\nLet's lengthen this a bit so that we can compute on all the dimensions, and we'll classify the states according to the rainfall region that they're in:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nRows: 16146 Columns: 80\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): State Name, Dist Name\ndbl (78): Dist Code, Year, State Code, RICE AREA (1000 ha), RICE PRODUCTION ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n### Production by region and crop\n\nNow that this is tidy, let's start wide.\n\nBefore we start looking at breakdowns across regions and crops, let's first just find out which regions and crops produce the most (in mass terms!)\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'state_name'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nLooks like biggest-producing states over 2005-2014 were all Central and North West region states.\n\nHow about crops?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nAs expected, rice and wheat are big ones, followed by sugarcane, oilseeds and maize.\n\nWe probably want to focus on [_kharif_ crops](), which are ones grown during the monsoon season that are dependent on good rain. Rice and maize are both major kharif crops, but wheat is not—it's a _rabi_ crop, grown in the winter.\n\n### Annual yield (all regions and crops)\n\n:::{.callout-note}\nYield in kg/ha is `(production * 10^6) / (area in * 10^3)`\n:::\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\nWe can see that yield has increased steadily over time (likely thanks to technological improvements), but you can see a bit of year-to-year variation.\n\nThere's a lot of noise here, as we're looking at parts of India and crops that are less dependent on rainfall.\n\n### Yield by region\n\nLet's look at this two ways: all crops for each region, and each crop for all regions. We'll start looking at each region:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\nIt's interesting to see that yield variability has increased substantially in the last 20 years, particularly in Peninsular India.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 52 × 6\n    year .fitted    .resid elnino neutral lanina\n   <dbl>   <dbl>     <dbl>  <dbl>   <dbl>  <dbl>\n 1  1966    1.38 -0.0297    NA       1.35  NA   \n 2  1967    1.42 -0.0374    NA       1.38  NA   \n 3  1968    1.46 -0.0559    NA       1.40  NA   \n 4  1969    1.50 -0.0352    NA       1.46  NA   \n 5  1970    1.54  0.0623    NA      NA      1.60\n 6  1971    1.58  0.149     NA      NA      1.73\n 7  1972    1.62  0.0639     1.68   NA     NA   \n 8  1973    1.66  0.134     NA      NA      1.79\n 9  1974    1.70 -0.0814    NA      NA      1.62\n10  1975    1.75  0.0483    NA      NA      1.79\n11  1976    1.79 -0.226     NA       1.56  NA   \n12  1977    1.83 -0.0438    NA       1.79  NA   \n13  1978    1.88 -0.0224    NA      NA      1.85\n14  1979    1.92 -0.0331    NA       1.89  NA   \n15  1980    1.96  0.0806    NA       2.05  NA   \n16  1981    2.01  0.169     NA       2.18  NA   \n17  1982    2.06 -0.0382     2.02   NA     NA   \n18  1983    2.10 -0.106     NA       2.00  NA   \n19  1984    2.15 -0.142     NA      NA      2.01\n20  1985    2.20 -0.0190    NA      NA      2.18\n21  1986    2.25 -0.112     NA       2.13  NA   \n22  1987    2.30 -0.0291     2.27   NA     NA   \n23  1988    2.35  0.141     NA      NA      2.49\n24  1989    2.41  0.0809    NA      NA      2.49\n25  1990    2.46  0.0132    NA       2.47  NA   \n26  1991    2.50  0.000387  NA       2.50  NA   \n27  1992    2.54  0.0629    NA       2.60  NA   \n28  1993    2.57  0.0598    NA       2.63  NA   \n29  1994    2.60  0.131     NA       2.73  NA   \n30  1995    2.63 -0.123     NA       2.51  NA   \n31  1996    2.66 -0.0582    NA       2.60  NA   \n32  1997    2.69 -0.0990     2.59   NA     NA   \n33  1998    2.72  0.226     NA      NA      2.95\n34  1999    2.76  0.0883    NA      NA      2.85\n35  2000    2.79  0.208     NA      NA      3.00\n36  2001    2.82  0.0517    NA       2.87  NA   \n37  2002    2.86 -0.462      2.39   NA     NA   \n38  2003    2.89 -0.234     NA       2.66  NA   \n39  2004    2.94 -0.0409    NA       2.90  NA   \n40  2005    2.98 -0.127     NA       2.86  NA   \n41  2006    3.03 -0.00157   NA       3.03  NA   \n42  2007    3.08  0.168     NA      NA      3.25\n43  2008    3.13  0.0242    NA       3.15  NA   \n44  2009    3.18 -0.186      3.00   NA     NA   \n45  2010    3.24 -0.00607   NA      NA      3.23\n46  2011    3.30  0.0856    NA       3.38  NA   \n47  2012    3.36 -0.233     NA       3.13  NA   \n48  2013    3.42  0.185     NA       3.61  NA   \n49  2014    3.49  0.255     NA       3.75  NA   \n50  2015    3.56 -0.130      3.43   NA     NA   \n51  2016    3.63 -0.257     NA       3.38  NA   \n52  2017    3.71  0.210     NA       3.92  NA   \n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nThe strong relationship here in Peninsular India, with a weaker relationship in Central India.\n\n### Crops grown by region\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'rainfall_region'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\nRice is a major crop in all four regions—Peninsular India contributed around 25 million tonnes in 2022 (about 20% of the national total).\n\nMaize is another crop grown in this season, and Peninsular India is a major grower—about 13 million tonnes (about 40% of the national total).\n\nThe other big crops in \n\n### Yield by crop\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\nCrops that seem to be most affected by ENSO include Groundnut, Cotton, Pigeonpea, Pulses and Soyabean. Others with a possible but marginal-looking relationship include Maize, Millet, Mustard, Oilseed, Safflower and Rice.\n\n## Analysis: crop yield and rainfall\n\nThat said, using SOI directly as a predictor might not be the way to go. It might be helpful to look at rainfall more directly as a predictor and then see the effect of ENSO on top.\n\nThe first thing we'll need to do is match Indian states to rainfall regions (NE, NW, central, peninsular). Then we can join the rainfall and crop yield datasets.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'rainfall_region'. You can override\nusing the `.groups` argument.\n```\n:::\n:::\n\n\nIt still looks like the stronger relationship here is with certain crops rather than certain regions, but let's break it down by both.\n\n\n::: {.cell}\n\n:::\n\n\n## Analysis: ENSO and global and national temperatures\n\nHere, global and national temperatures are courtesy of [Berkeley Earth](https://berkeleyearth.org/data/). They have generously agreed to licence the data here under [Creative Commons Attribution (CC BY 4.0)](https://creativecommons.org/licenses/by/4.0/).\n\nLet's start with global temperature data:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                               file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-ecuador.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                               file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-florida.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                              file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-global.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                                 file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-indonesia.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                                file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-malaysia.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                                   file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-new_zealand.txt'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 1 parsing failure.\nrow col   expected    actual                                                             file\n  1  -- 12 columns 1 columns '/workspaces/report-elnino/data/berkeley-monthly-tavg-texas.txt'\n```\n:::\n:::\n\n\nLet's join it to the Nino3.4, which we have monthly across the whole year. But we might need a smoother on those first.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `date = ymd(paste(year, month, \"01\"))`.\nCaused by warning:\n!  6 failed to parse.\n```\n:::\n:::\n\n\nFirst let's look at the global picture:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 24 rows containing missing values (`geom_line()`).\n```\n:::\n:::\n\n\nAnd then some selected regions:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 31 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 30 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 31 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 30 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_line()`).\n```\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}