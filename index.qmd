---
title: "El Niño"
author: "James Goldie"
format: html
---

```{r}
#| label: setup
library(tidyverse)
library(janitor)
library(broom)
library(RColorBrewer)
library(here)

# consistent colours for enso phases
enso_colours <- c(
  "lanina" = "#3333bb",
  "neutral" = "lightgrey",
  "elnino" = "#dd3333")
```

## Analysis: Indian rainfall and ENSO

```{r}
#| label: india-rainfall
here("data", "india-rainfall-raw.csv") |>
  read_csv() |>
  clean_names() |>
  rename(region = x1) |>
  rename_with(str_replace_all, everything(), "jun_sept", "jjas") |>
  filter(!is.na(region)) ->
india_rainfall
```

## Analysis: monthly SOI to JJAS SOI

And here's the average SOI over June–September each year.

::: {.callout-note}
There're many ways to classify El Niños! This is just one indicator! But SOI _does_ give us some indication of wind activity over that period.
:::

```{r}
#| label: tidy-soi
#| 
here("data", "soi-monthly-raw.csv") |>
  read_csv(col_names = c("year_month", "value")) |>
  separate(year_month, into = c("year", "month"), sep = 4) |>
  mutate(across(c(year, month), as.numeric)) |>
  filter(year >= 1901, month %in% 6:9) |>
  group_by(year) |>
  summarise(mean_soi = mean(value, na.rm = TRUE)) |>
  mutate(
    phase = case_when(
      mean_soi >= 7 ~ "lanina",
      mean_soi <= -7 ~ "elnino",
      TRUE ~ "neutral")) |>
  write_csv(here("data", "soi-jjas.csv")) ->
soi_jjas
  
# write out to disk for flourish
# soi_jjas |>  
#   mutate(
#     flourish_map = case_when(
#       mean_soi >= 7 ~ paste0(year, ": ", "blue"),
#       mean_soi <= -7 ~ paste0(year, ": ", "red"),
#       TRUE ~ paste0(year, ": ", "lightgrey"))) |>
#   pull(flourish_map) |>
#   paste(collapse = "\n") |> cat()
```

Let's join the two and visualise by colour. Here's the Southern Peninsula:

```{r}
#| label: vis-india-soi-rainfall
india_rainfall |>
  filter(region == "Peninsular India") |>
  select(year, actual_rainfall_jjas, departure_percentage_jjas) |>
  left_join(soi_jjas, by = join_by(year)) |>
  ggplot() +
    aes(x = year, y = departure_percentage_jjas, fill = phase) +
    geom_col() +
    scale_y_continuous(labels = scales::label_percent(scale = 1)) +
    scale_fill_manual(values = enso_colours) +
    theme_minimal() +
    theme(
      panel.grid.minor = element_blank(),
      panel.grid.major.x = element_blank(),
      legend.position = "top",
      legend.direction = "horizontal") +
    labs(
      fill = NULL, x = NULL, y = "Rainfall anomaly",
      title = "South Peninsula: annual June–September rainfall")
```

## Analysis: crop yield and ENSO

Now let's pull in crop yield data from [ICRISAT](http://data.icrisat.org). This data has columns for each crop _and_ each of three measures:

1. Area (in thousands of hectares),
2. Productions (in thousands of tons), and
3. Yield (in kilograms per hectare)

Let's lengthen this a bit so that we can compute on all the dimensions, and we'll classify the states according to the rainfall region that they're in:

```{r}
#| label: tidy-crops
here("data", "india-crops-by-district.csv") |>
  read_csv() |>
  janitor::clean_names() |>
  pivot_longer(
    cols = -c(dist_code, year, state_code, state_name, dist_name),
    names_to = c("crop", ".value"),
    names_pattern =
      "([[:alpha:]]+)_(area_1000_ha|production_1000_tons|yield_kg_per_ha)",
    values_to = "value") |>
  mutate(crop = str_to_sentence(crop)) |>
  mutate(
    rainfall_region = case_match(state_name,
      c("Kerala", "Tamil Nadu", "Andhra Pradesh", "Karnataka", "Telangana") ~
        "Peninsular India",      
      c("Chhattisgarh", "Gujarat", "Madhya Pradesh", "Maharashtra", "Orissa") ~
        "Central India",
      c("Rajasthan", "Uttar Pradesh", "Haryana", "Punjab", "Uttarakhand",
        "Himachal Pradesh") ~
        "North West India",
      c("Assam", "Bihar", "Jharkhand", "West Bengal" ) ~ "North East India")) |>
  select(year, dist_code, dist_name, state_code, state_name, rainfall_region,
    crop, everything()) ->
india_crops
```

### Production by region and crop

Now that this is tidy, let's start wide.

Before we start looking at breakdowns across regions and crops, let's first just find out which regions and crops produce the most (in mass terms!)

```{r}
#| label: production-by-region
india_crops |>
  filter(year %in% 2005:2014) |>
  group_by(state_name, rainfall_region) |>
  summarise(total_prod_1000_tons = sum(production_1000_tons, na.rm = TRUE)) |>
  ungroup() |>
  mutate(state_name = fct_reorder(state_name, total_prod_1000_tons)) |>
  ggplot() +
    aes(x = state_name, y = total_prod_1000_tons, fill = rainfall_region) +
    geom_col() +
    coord_flip() +
    theme_minimal()
```

Looks like biggest-producing states over 2005-2014 were all Central and North West region states.

How about crops?

```{r}
#| label: production-by-crop
india_crops |>
  filter(year %in% 2005:2014) |>
  group_by(crop) |>
  summarise(total_prod_1000_tons = sum(production_1000_tons, na.rm = TRUE)) |>
  mutate(crop = fct_reorder(crop, total_prod_1000_tons)) |>
  ggplot() +
    aes(x = crop, y = total_prod_1000_tons) +
    geom_col() +
    coord_flip() +
    theme_minimal()
```

As expected, rice and wheat are big ones, followed by sugarcane, oilseeds and maize.

We probably want to focus on [_kharif_ crops](), which are ones grown during the monsoon season that are dependent on good rain. Rice and maize are both major kharif crops, but wheat is not—it's a _rabi_ crop, grown in the winter.

### Annual yield (all regions and crops)

:::{.callout-note}
Yield in kg/ha is `(production * 10^6) / (area in * 10^3)`
:::

```{r}
#| label: crops-national
india_crops |>
  group_by(year) |>
  summarise(
    sum_area_1000_ha = sum(area_1000_ha, na.rm = TRUE),
    sum_production_1000_tons = sum(production_1000_tons, na.rm = TRUE),
    yield_kg_per_ha =
      (sum_production_1000_tons * 1e6) /
      (sum_area_1000_ha * 1e6)) ->
india_national_allcrops
```

```{r}
#| label: vis-cropyield-national-allcrops
india_national_allcrops |>
  left_join(soi_jjas, by = join_by(year)) |>
  ggplot() +
    aes(x = year, y = yield_kg_per_ha) +
    geom_point(aes(colour = phase)) +
    geom_smooth(colour = "#eeeeee", se = FALSE) +
    scale_colour_manual(values = enso_colours) +
    theme_minimal() +
    theme(
      legend.direction = "horizontal",
      legend.position = "top") +
    labs(
      x = NULL, y = "Yield (kg per ha)",
      title = "Indian national crop yield (all crops)",
      subtitle = "Highlighted by ENSO phase")
```

We can see that yield has increased steadily over time (likely thanks to technological improvements), but you can see a bit of year-to-year variation.

There's a lot of noise here, as we're looking at parts of India and crops that are less dependent on rainfall.

### Yield by region

Let's look at this two ways: all crops for each region, and each crop for all regions. We'll start looking at each region:

```{r}
#| label: vis-cropyield-byregion-allcrops

india_crops |>
  group_by(year, rainfall_region) |>
  summarise(
    sum_area_1000_ha = sum(area_1000_ha, na.rm = TRUE),
    sum_production_1000_tons = sum(production_1000_tons, na.rm = TRUE),
    yield_kg_per_ha =
      (sum_production_1000_tons * 1e6) /
      (sum_area_1000_ha * 1e6)) |>
  ungroup() ->
india_allcrops_byregion

india_allcrops_byregion |>
  left_join(soi_jjas, by = join_by(year)) |>
  ggplot() +
    aes(x = year, y = yield_kg_per_ha) +
    geom_line(colour = "#eeeeee", linewidth = 0.5) +
    geom_point(aes(colour = phase)) +
    geom_smooth(colour = "#dddddd", se = FALSE) +
    facet_wrap(vars(rainfall_region)) +
    scale_colour_manual(values = enso_colours) +
    theme_minimal() +
    theme(
      legend.direction = "horizontal",
      legend.position = "top") +
    labs(
      x = NULL, y = "Yield (kg per ha)",
      title = "Indian national crop yield (all crops)",
      subtitle = "Highlighted by ENSO phase")
```

It's interesting to see that yield variability has increased substantially in the last 20 years, particularly in Peninsular India.

```{r}
#| label: vis-cropyield-peninsular

# let's focus on peninsular india
india_allcrops_byregion |>
  left_join(soi_jjas, by = join_by(year)) |>
  filter(rainfall_region == "Peninsular India") |>
  ggplot() +
    aes(x = year, y = yield_kg_per_ha) +
    geom_line(colour = "#eeeeee", linewidth = 0.5) +
    geom_point(aes(colour = phase)) +
    geom_smooth(colour = "#eeeeee", se = FALSE) +
    scale_colour_manual(values = enso_colours) +
    theme_minimal() +
    theme(
      legend.direction = "horizontal",
      legend.position = "top",
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank()) +
    labs(
      x = NULL, y = "Yield (kg per ha)",
      title = "Crop yield in Peninsular India (all crops)",
      subtitle = "Highlighted by ENSO phase")
```

```{r}
#| label: vis-cropyield-byregion-allcrops-resid

# let's pre-calculate the loess smoother and then regress the errors against
# enso phase

fit_and_augment_smoother <- function(df) {
  df |>
    loess(yield_kg_per_ha ~ year, data = _) |>
    augment(data = df)
}

india_allcrops_byregion |>
  left_join(soi_jjas, by = join_by(year)) |>
  filter(!is.na(yield_kg_per_ha), !is.na(mean_soi)) |>
  nest(.by = rainfall_region) |>
  mutate(data = map(data, fit_and_augment_smoother)) |>
  unnest(data) ->
india_allcrops_byregion_resid

ggplot(india_allcrops_byregion_resid) +
  aes(x = rainfall_region, y = .resid) +
  geom_boxplot(
    aes(colour = phase, fill = phase),
    outlier.shape = NA,
    alpha = 0.25) +
  geom_point(aes(colour = phase), position = "jitter", alpha = 0.5, size = 0.5) +
  geom_hline(yintercept = 0) +
  scale_colour_manual(values = enso_colours) +
  scale_fill_manual(values = enso_colours) +
  coord_flip() +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    legend.position = "top", legend.direction = "horizontal") +
  labs(
    x = NULL, y = "Residual on predicted crop yield (kg per hectare)",
    colour = "ENSO phase",
    fill = "ENSO phase")
```

The strong relationship here in Peninsular India, with a weaker relationship in Central India.

### Crops grown by region

```{r}
#| label: vis-cropsgrrown-byregion

india_crops |>
  filter(year == max(year, na.rm = TRUE)) |>
  group_by(rainfall_region, crop) |>
  summarise(
    total_production_1000_tons = sum(production_1000_tons, na.rm = TRUE)) |>
  ungroup() |>
  arrange(crop) ->
crops_by_region_2022

# we need some additional colours for all this crop exploration
colour_count = length(unique(crops_by_region_2022$crop))
get_palette = colorRampPalette(brewer.pal(9, "Paired"))
crop_colours = sample(get_palette(colour_count))

ggplot(crops_by_region_2022) +
  aes(x = crop, y = total_production_1000_tons, fill = crop) +
  geom_col() +
  facet_wrap(vars(rainfall_region), scales = "free_y") +
  scale_fill_manual(values = crop_colours) +
  scale_y_continuous(expand = expansion()) +
  coord_flip() +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  )
```

Rice is a major crop in all four regions—Peninsular India contributed around 25 million tonnes in 2022 (about 20% of the national total).

Maize is another crop grown in this season, and Peninsular India is a major grower—about 13 million tonnes (about 40% of the national total).

The other big crops in 

### Yield by crop

```{r}
#| label: vis-cropyield-bycrop-allstates

india_crops |>
  group_by(year, crop) |>
  summarise(
    sum_area_1000_ha = sum(area_1000_ha, na.rm = TRUE),
    sum_production_1000_tons = sum(production_1000_tons, na.rm = TRUE),
    yield_kg_per_ha =
      (sum_production_1000_tons * 1e6) /
      (sum_area_1000_ha * 1e6)) |>
  ungroup() ->
india_national_bycrop

# let's pre-calculate the loess smoother and then regress the errors against
# enso phase

fit_and_augment_smoother <- function(df) {
  df |>
    loess(yield_kg_per_ha ~ year, data = _) |>
    augment(data = df)
}

india_national_bycrop |>
  left_join(soi_jjas, by = join_by(year)) |>
  filter(!is.na(yield_kg_per_ha), !is.na(mean_soi)) |>
  nest(.by = crop) |>
  mutate(data = map(data, fit_and_augment_smoother)) |>
  unnest(data) ->
india_national_bycrop_resid

ggplot(india_national_bycrop_resid) +
  aes(x = crop, y = .resid) +
  geom_boxplot(
    aes(colour = phase, fill = phase),
    outlier.shape = NA,
    alpha = 0.25) +
  geom_point(aes(colour = phase), position = "jitter", alpha = 0.5, size = 0.5) +
  geom_hline(yintercept = 0) +
  facet_wrap(vars(crop), scales = "free") +
  scale_colour_manual(values = enso_colours) +
  scale_fill_manual(values = enso_colours) +
  coord_flip() +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    legend.position = "top", legend.direction = "horizontal",
    axis.text.x = element_blank()) +
  labs(
    x = NULL, y = "Residual on predicted crop yield (kg per hectare)",
    colour = "ENSO phase",
    fill = "ENSO phase")
```

Crops that seem to be most affected by ENSO include Groundnut, Cotton, Pigeonpea, Pulses and Soyabean. Others with a possible but marginal-looking relationship include Maize, Millet, Mustard, Oilseed, Safflower and Rice.

## Analysis: crop yield and rainfall

That said, using SOI directly as a predictor might not be the way to go. It might be helpful to look at rainfall more directly as a predictor and then see the effect of ENSO on top.

The first thing we'll need to do is match Indian states to rainfall regions (NE, NW, central, peninsular). Then we can join the rainfall and crop yield datasets.

```{r}
#| label: join-rainfall-crops

# first, summarise by year, state and crop
india_crops |>
  group_by(year, state_name, crop) |>
  summarise(
    sum_area_1000_ha = sum(area_1000_ha, na.rm = TRUE),
    sum_production_1000_tons = sum(production_1000_tons, na.rm = TRUE),
    yield_kg_per_ha =
      (sum_production_1000_tons * 1e6) /
      (sum_area_1000_ha * 1e6)) |>
  ungroup() ->
india_states_crops

# categorise states by rainfall region
# (map from zheng et al. 2016: https://doi.org/10.1002/2016JD025135
india_states_crops |>
  mutate(
    rainfall_region = case_match(state_name,
      c("Kerala", "Tamil Nadu", "Andhra Pradesh", "Karnataka", "Telangana") ~
        "Peninsular India",      
      c("Chhattisgarh", "Gujarat", "Madhya Pradesh", "Maharashtra", "Orissa") ~
        "Central India",
      c("Rajasthan", "Uttar Pradesh", "Haryana", "Punjab", "Uttarakhand",
        "Himachal Pradesh") ~
        "North West India",
      c("Assam", "Bihar", "Jharkhand", "West Bengal" ) ~ "North East India")) |>
  select(year, state_name, rainfall_region, everything()) |>
  group_by(year, rainfall_region, crop) |>
  summarise(
    total_area_1000_ha = sum(sum_area_1000_ha, na.rm = TRUE),
    total_production_1000_tons = sum(sum_production_1000_tons, na.rm = TRUE),
    yield_kg_per_ha =
      (total_production_1000_tons * 1e6) /
      (total_area_1000_ha * 1e6)) |>
  ungroup() ->
india_regions_crops

# now join rainfall and crop yield
india_regions_crops |>
  left_join(india_rainfall,
    by = join_by(year == year, rainfall_region == region),
    multiple = "all",
    relationship = "many-to-one") ->
india_regions_all

fit_and_augment_smoother <- function(df) {
  df |>
    loess(yield_kg_per_ha ~ year, data = _) |>
    augment(data = df)
}

# fit a loess and get the yield residuals
india_regions_all |>
  filter(!is.na(yield_kg_per_ha), !is.na(year),
    is.finite(year), is.finite(yield_kg_per_ha)) |>
  nest(.by = c(crop, rainfall_region)) |>
  mutate(data = map(data, fit_and_augment_smoother)) |>
  unnest(data) |>
  rename(yield_fitted = .fitted, yield_resid = .resid) ->
india_regions_all_resid

# now visualise rainfall against residuals
ggplot(india_regions_all_resid) +
  aes(x = departure_percentage_jjas, y = yield_resid) +
  geom_hline(yintercept = 0) +
  geom_vline(xintercept = 0) +
  geom_point() +
  facet_grid(rows = vars(crop), cols = vars(rainfall_region), scales = "free") +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "white")
  ) ->
region_crop_rainfall_plot

ggsave(
  here("out", "region_crop_rainfall_plot.png"),
  region_crop_rainfall_plot,
  height = 7200, width = 1200, units = "px")
```

It still looks like the stronger relationship here is with certain crops rather than certain regions, but let's break it down by both.
