---
# title: Global climate drivers
format:
  360-embed-html:
    css: svgmap.css
resources:
  - worldmap-interactive-test.svg
360embed:
  before: |
    &lt;iframe allow=&quot;fullscreen&quot; allowfullscreen=&quot;true&quot; src=&quot;
  # uncomment and modify this line for production
  # url: https://feb2023.360info-heatmaps-narclim.pages.dev/news/
  after: |
    &quot; title=&quot;Interactive: future heat&quot; style=&quot;width:100%; height:500px; border:none; background-color: white;&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
---

{{< include _popup-buttons.qmd >}}

```{=html}
<style>
  /* .hidden {
    opacity: 0;
  }

  .deemphasised {
    opacity: 0.25;
  } */
</style>
```

```{ojs}
mapGraphic = {
  
  // load svg for interaction:
  // https://observablehq.com/@rawgraphs/load-svg-and-add-simple-interaction
  const mapString = await
    FileAttachment("worldmap-interactive-test.svg").text();
  const svgDoc = (new DOMParser).parseFromString(mapString, "image/svg+xml");
  const svg = d3.select(svgDoc.documentElement).remove();

  // TODO - inject some classes?
  // svg.insert("svg:style").text(`
  // .hidden {
  //   opacity: 0;
  // }

  // .deemphasised {
  //   opacity: 0.25;
  // }
  // `)

  // helper functions to show and hide things
  const hideSelection = (selection) =>
    selection.classed("hidden", true).attr("aria-hidden", "true");
  const showSelection = (selection) =>
    selection.classed("hidden", false).attr("aria-hidden", "false");
  const deemphasise = (selection) =>
    selection
      .classed("hidden", false)
      .classed("deemphasised", true)
      .attr("aria-hidden", "false")
  const emphasise = (selection) =>
    selection.classed("deemphasised", false).attr("aria-hidden", "false");
  
  // to start, show buttons, hide impacts, and make buttons focusable
  let allButtons = svg.selectAll("[id^=\"btn-\"]");
  let allImpacts = svg.selectAll("[id^=\"impact-\"]");
  let mapCaption = d3.select("#mapcaption");

  allButtons.attr("tabindex", "0");
  hideSelection(allImpacts);
  showSelection(allButtons);

  // el nino button: surface el-nino specific stuff
  let btnElnino = svg.select("#btn-elnino")
  let btnLanina = svg.select("#btn-lanina")
  btnElnino.on("click", function() {

    hideSelection(allImpacts)
    deemphasise(allButtons)

    let impactsElnino = svg.selectAll("[id^=\"impact-elnino-\"]")
    showSelection(impactsElnino)
    emphasise(btnElnino)
    deemphasise(btnLanina)
    mapCaption.text("Now we can describe El Ni√±o impacts in more detail!")
  })

  // TODO - other button handlers

  // TODO - handler for basemap, to return things?
  // TODO - need to rework button states to be more consistent
  let basemap = svg.select("#worldmap")
  basemap.on("click", function() {
    hideSelection(allImpacts)
    showSelection(allButtons)
    mapCaption.text("Choose a climate driver")
  })

  return svg.node()
}

```

```{=html}
<p id="mapcaption">We can put a message here.</p>
```



{{< include _popup-dialogs.qmd >}}
